{
  "version": 3,
  "sources": ["../commandPalette.ts"],
  "sourcesContent": ["// --- Type Definitions ---\r\n// deno-lint-ignore no-namespace\r\nexport namespace Palette {\r\n  /**\r\n   * A function used to populate commands for the palette.\r\n   * This function is called on `show` and optionally on `init` to retrieve an array of commands.\r\n   * It should return the full list of commands to be used; avoid calling `.setCommands` within this function directly.\r\n   *\r\n   * @param palette The palette instance for which commands are being populated.\r\n   * @returns An array of Command objects to be displayed in the palette.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // Example of a PopulateFunc that returns a static list of commands:\r\n   * (palette) => {\r\n   *   return [\r\n   *     {\r\n   *       id: 'show-info',\r\n   *       title: 'Show Info',\r\n   *       run: (w) => { console.log('current URI:', w.gBrowser.selectedTab.linkedBrowser.documentURI.spec); }\r\n   *     }\r\n   *   ];\r\n   * };\r\n   *\r\n   * // Example of a PopulateFunc that dynamically generates commands:\r\n   * (palette) => {\r\n   *   const dynamicCommands = [];\r\n   *   // Assuming 'palette' object has properties like 'bufferName' for context\r\n   *   if (palette.bufferName === 'scratch') {\r\n   *     dynamicCommands.push({\r\n   *       name: 'clear-scratch',\r\n   *       execute: () => { console.log('Clearing scratch buffer...'); }\r\n   *     });\r\n   *   }\r\n   *   return dynamicCommands;\r\n   * };\r\n   * ```\r\n   */\r\n  export type PopulateFunc = (palette: Palette) => Palette.Command[];\r\n  export type RunFunc = (win: Window) => void | Promise<void>;\r\n  /**\r\n   * Configuration options for the Palette.\r\n   */\r\n  export interface Options {\r\n    placeholder?: string;\r\n    maxVisible?: number;\r\n    minQueryLength?: number;\r\n    /** If `true`, enable fuzzy search behavior (default true) */\r\n    fuzzy?: boolean;\r\n    /** If `true`, the `populateFunc` is called automatically when the palette initializes. (default false)*/\r\n    populateOnInit?: boolean;\r\n  }\r\n  /**\r\n   * Represents a single command that can be executed.\r\n   */\r\n  export interface Command {\r\n    id: string;\r\n    title: string;\r\n    run: RunFunc;\r\n    subtitle?: string;\r\n  }\r\n}\r\n/**\r\n * @note Command Palette is not a widget, so we cannot reuse it between windows.\r\n * @example\r\n * ```ts\r\n * new Palette(\r\n *     window,\r\n *     [{ id: 'hello', title: 'Say Hello', run: () => window.alert('Hello!') }]\r\n * )\r\n * ```\r\n */\r\nexport class Palette {\r\n  private window: Window;\r\n  private document: Document;\r\n  private dialog: HTMLDialogElement;\r\n  private input: HTMLInputElement;\r\n  private results: HTMLDivElement;\r\n  private populateFunc: Palette.PopulateFunc;\r\n  private emptyState: HTMLDivElement;\r\n  private ranOnce: boolean;\r\n  private commands: Palette.Command[];\r\n  private filtered: Palette.Command[];\r\n  private selectedIndex: number;\r\n  private options: Required<Palette.Options>;\r\n  /** @param populateFunc function to populate Commands avoid calling `.setCommands` within this function directly. */\r\n  constructor(\r\n    win: Window,\r\n    populateFunc: Palette.PopulateFunc,\r\n    options: Palette.Options = {},\r\n  ) {\r\n    this.window = win;\r\n    if (!win.document) {\r\n      throw new Error(\"Invalid window passed to constructor\");\r\n    }\r\n    this.document = win.document;\r\n    this.dialog = this.document.createElement(\"dialog\");\r\n    this.input = this.document.createElement(\"input\");\r\n    this.results = this.document.createElement(\"div\");\r\n    this.emptyState = this.document.createElement(\"div\");\r\n    this.commands = [];\r\n    this.filtered = [];\r\n    this.selectedIndex = 0;\r\n    this.ranOnce = false;\r\n    this.populateFunc = populateFunc;\r\n    this.options = {\r\n      placeholder: \"Type a command...\",\r\n      maxVisible: 8,\r\n      minQueryLength: 0,\r\n      fuzzy: true,\r\n      populateOnInit: false,\r\n      ...options,\r\n    };\r\n    this._buildUI();\r\n    this._bindEvents();\r\n    // this.setCommands(this.commands);\r\n  }\r\n  public show(doc: Document, prefill = \"\"): void {\r\n    if (!doc.body) return;\r\n    if (!this.ranOnce) {\r\n      this;\r\n      this.ranOnce = true;\r\n    }\r\n    this.dialog.showModal();\r\n    this.input.value = prefill;\r\n    this._onQueryChange();\r\n    this._focusInput();\r\n    doc.body.style.overflow = \"hidden\";\r\n  }\r\n  public hide(): void {\r\n    if (this.dialog.open) {\r\n      this.dialog.close();\r\n    }\r\n    this.document.body.style.overflow = \"\";\r\n    this._clearActiveDescendant();\r\n  }\r\n  public add(cmd: Palette.Command): void {\r\n    if (!cmd || !cmd.id) throw new Error(\"Command must have an id\");\r\n    const existingCmdIndex = this.commands.findIndex((obj) =>\r\n      obj.id === cmd.id\r\n    );\r\n    if (existingCmdIndex !== -1) {\r\n      this.commands[existingCmdIndex] = cmd; // Replace it\r\n    } else {\r\n      this.commands.push(cmd); // Add it\r\n    }\r\n    this.setCommands(this.commands);\r\n  }\r\n  public setCommands(list: Palette.Command[]): void {\r\n    this.commands = Array.isArray(list) ? list.slice() : [];\r\n    this._onQueryChange();\r\n  }\r\n  public destroy(): void {\r\n    this._removeEvents();\r\n    this.dialog?.remove();\r\n  }\r\n  private _buildUI(): void {\r\n    this.dialog.className = \"cp-dialog\";\r\n    this.dialog.setAttribute(\"aria-modal\", \"true\");\r\n    this.dialog.setAttribute(\"role\", \"dialog\");\r\n    Object.assign(this.dialog.style, {\r\n      padding: \"0\",\r\n      border: \"0\",\r\n      maxWidth: \"720px\",\r\n      width: \"min(90vw, 720px)\",\r\n      borderRadius: \"12px\",\r\n      background: \"transparent\",\r\n      boxShadow: \"var(--cp-dialog-shadow)\",\r\n    });\r\n    const card = this.document.createElement(\"div\");\r\n    card.className = \"cp-card\";\r\n    card.setAttribute(\"role\", \"document\");\r\n    const searchWrap = this.document.createElement(\"div\");\r\n    searchWrap.className = \"cp-search-wrap\";\r\n    this.input.type = \"search\";\r\n    this.input.placeholder = this.options.placeholder;\r\n    this.input.setAttribute(\"aria-label\", \"Command palette search\");\r\n    this.input.autocomplete = \"off\";\r\n    this.input.spellcheck = false;\r\n    this.input.className = \"cp-input\";\r\n    const hint = this.document.createElement(\"div\");\r\n    hint.className = \"cp-hint\";\r\n    hint.textContent = \"Esc to close \u2022 \u2191/\u2193 to navigate \u2022 Enter to run\";\r\n    searchWrap.append(this.input, hint);\r\n    this.results.className = \"cp-results\";\r\n    this.results.setAttribute(\"role\", \"listbox\");\r\n    this.results.tabIndex = -1;\r\n    this.results.style.maxHeight = `${this.options.maxVisible * 54}px`;\r\n    this.emptyState.className = \"cp-empty-state\";\r\n    this.emptyState.textContent = \"No commands found\";\r\n    card.append(searchWrap, this.results, this.emptyState);\r\n    this.dialog.appendChild(card);\r\n    this.document.body.appendChild(this.dialog);\r\n    const style = this.document.createElement(\"style\");\r\n    style.textContent = `\r\n            :root {\r\n                --cp-bg-card: #282a36;\r\n                --cp-text-primary: #f8f8f2;\r\n                --cp-text-secondary: #bd93f9;\r\n                --cp-border-light: rgba(255, 255, 255, 0.1);\r\n                --cp-shadow-card: 0 2px 10px rgba(0, 0, 0, 0.5);\r\n                --cp-dialog-shadow: 0 10px 30px rgba(0, 0, 0, 0.7);\r\n                --cp-input-bg: #44475a;\r\n                --cp-input-border: #6272a4;\r\n                --cp-item-hover-bg: rgba(255, 255, 255, 0.08);\r\n                --cp-highlight-color: #50fa7b;\r\n            }\r\n            .cp-dialog { box-shadow: var(--cp-dialog-shadow); }\r\n            .cp-card { border-radius: 12px; overflow: hidden; background: var(--cp-bg-card); box-shadow: var(--cp-shadow-card); font-family: system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial; color: var(--cp-text-primary); }\r\n            .cp-search-wrap { padding: 12px; border-bottom: 1px solid var(--cp-border-light); display: flex; gap: 8px; align-items: center; }\r\n            .cp-input { flex: 1; font-size: 15px; padding: 10px 12px; border-radius: 8px; border: 1px solid var(--cp-input-border); outline: none; background: var(--cp-input-bg); color: var(--cp-text-primary); }\r\n            .cp-input::placeholder { color: var(--cp-text-secondary); opacity: 0.7; }\r\n            .cp-hint { font-size: 12px; opacity: 0.7; white-space: nowrap; user-select: none; color: var(--cp-text-secondary); }\r\n            .cp-results { overflow-y: auto; padding: 6px; display: grid; row-gap: 6px; }\r\n            .cp-empty-state { padding: 16px; text-align: center; opacity: 0.75; font-size: 14px; color: var(--cp-text-secondary); }\r\n            .cp-item { display: flex; flex-direction: column; gap: 2px; padding: 10px 12px; border-radius: 8px; cursor: pointer; }\r\n            .cp-item:hover, .cp-item[aria-selected=\"true\"] { background: var(--cp-item-hover-bg); }\r\n            .cp-title { font-size: 14px; font-weight: 600; line-height: 1; color: var(--cp-text-primary); }\r\n            .cp-sub { font-size: 12px; opacity: 0.7; line-height: 1; color: var(--cp-text-secondary); }\r\n            .cp-highlight { font-weight: 700; text-decoration: underline; text-decoration-thickness: 2px; text-underline-offset: 3px; color: var(--cp-highlight-color); }\r\n        `;\r\n    this.document.head.appendChild(style);\r\n  }\r\n  private _bindEvents(): void {\r\n    this.input.addEventListener(\"input\", this._onInput);\r\n    this.dialog.addEventListener(\"click\", this._onDialogClick);\r\n    this.dialog.addEventListener(\"close\", this._onClose);\r\n    this.dialog.addEventListener(\"keydown\", this._onFocusTrap);\r\n    this.dialog.addEventListener(\"picker:firstShow\", this._onFirstShow);\r\n    this.document.addEventListener(\"keydown\", this._onKeyDown, true);\r\n  }\r\n  private _removeEvents(): void {\r\n    this.input.removeEventListener(\"input\", this._onInput);\r\n    this.dialog.removeEventListener(\"picker:firstShow\", this._onFirstShow);\r\n    this.dialog.removeEventListener(\"click\", this._onDialogClick);\r\n    this.dialog.removeEventListener(\"close\", this._onClose);\r\n    this.dialog.removeEventListener(\"keydown\", this._onFocusTrap);\r\n    this.document.removeEventListener(\"keydown\", this._onKeyDown, true);\r\n  }\r\n  private _onFirstShow = (): void => {\r\n    const commands = this.populateFunc(this);\r\n    this.setCommands(commands);\r\n  };\r\n  private _onClose = (): void => {\r\n    this._clearActiveDescendant();\r\n    this.document.body.style.overflow = \"\";\r\n  };\r\n  private _onDialogClick = (e: MouseEvent): void => {\r\n    if (e.target === this.dialog) {\r\n      e.preventDefault();\r\n      this.hide();\r\n    }\r\n  };\r\n  private _onInput = (): void => {\r\n    this._onQueryChange();\r\n  };\r\n  private _focusInput(): void {\r\n    try {\r\n      this.input.focus();\r\n      this.input.select();\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n  private _onKeyDown = (e: KeyboardEvent): void => {\r\n    if (!this.dialog.open) return;\r\n    switch (e.key) {\r\n      case \"Escape\":\r\n        e.preventDefault();\r\n        this.hide();\r\n        break;\r\n      case \"ArrowUp\":\r\n        e.preventDefault();\r\n        this._moveSelection(-1);\r\n        break;\r\n      case \"ArrowDown\":\r\n        e.preventDefault();\r\n        this._moveSelection(1);\r\n        break;\r\n      case \"Tab\":\r\n        if (e.shiftKey && this.document.activeElement !== this.input) {\r\n          e.preventDefault();\r\n          this._moveSelection(-1);\r\n        } else if (!e.shiftKey && this.document.activeElement === this.input) {\r\n          e.preventDefault();\r\n          this._moveSelection(1);\r\n        }\r\n        break;\r\n      case \"Enter\":\r\n        if (this.filtered.length > 0) {\r\n          e.preventDefault();\r\n          const cmd = this.filtered[this.selectedIndex];\r\n          if (cmd) this._runCommand(cmd);\r\n        }\r\n        break;\r\n      case \"p\":\r\n        if (e.altKey) {\r\n          e.preventDefault();\r\n          this._moveSelection(-1);\r\n        }\r\n        break;\r\n      case \"n\":\r\n        if (e.altKey) {\r\n          e.preventDefault();\r\n          this._moveSelection(1);\r\n        }\r\n        break;\r\n    }\r\n  };\r\n  private _onFocusTrap = (e: KeyboardEvent): void => {\r\n    if (e.key !== \"Tab\") return;\r\n    const focusable = this.dialog.querySelectorAll<HTMLElement>(\r\n      'input, button, [tabindex]:not([tabindex=\"-1\"])',\r\n    );\r\n    if (focusable.length === 0) return;\r\n    const first = focusable[0];\r\n    const last = focusable[focusable.length - 1];\r\n    if (e.shiftKey && this.document.activeElement === first) {\r\n      e.preventDefault();\r\n      last.focus();\r\n    } else if (!e.shiftKey && this.document.activeElement === last) {\r\n      e.preventDefault();\r\n      first.focus();\r\n    }\r\n  };\r\n  private _onQueryChange(): void {\r\n    const q = this.input.value.trim();\r\n    const results = q.length >= this.options.minQueryLength\r\n      ? this._filterCommands(q)\r\n      : this.commands.slice();\r\n    this.filtered = results;\r\n    this.selectedIndex = Math.min(\r\n      this.selectedIndex,\r\n      Math.max(0, results.length - 1),\r\n    );\r\n    if (this.selectedIndex < 0) this.selectedIndex = 0;\r\n    this._renderResults(q);\r\n  }\r\n  private _filterCommands(q: string): Palette.Command[] {\r\n    if (q === \"\") return this.commands.slice();\r\n    const query = q.toLowerCase();\r\n    const scored = this.commands\r\n      .map((cmd) => {\r\n        const title = (cmd.title || \"\").toLowerCase();\r\n        const subtitle = (cmd.subtitle || \"\").toLowerCase();\r\n        let score = 0;\r\n        if (title === query) score += 100;\r\n        if (title.startsWith(query)) score += 75;\r\n        if (title.includes(query)) score += 50;\r\n        if (subtitle.includes(query)) score += 30;\r\n        if (this.options.fuzzy && this._fuzzyMatch(query, title)) {\r\n          score += 10;\r\n        }\r\n        return { cmd, score };\r\n      })\r\n      .filter((x) => x.score > 0);\r\n    scored.sort(\r\n      (a, b) => b.score - a.score || a.cmd.title.localeCompare(b.cmd.title),\r\n    );\r\n    return scored.map((s) => s.cmd);\r\n  }\r\n  private _fuzzyMatch(query: string, text: string): boolean {\r\n    if (query.length === 0) return true;\r\n    let qi = 0, ti = 0;\r\n    while (qi < query.length && ti < text.length) {\r\n      if (query[qi] === text[ti]) {\r\n        qi++;\r\n      }\r\n      ti++;\r\n    }\r\n    return qi === query.length;\r\n  }\r\n  private _renderResults(query: string): void {\r\n    this.results.innerHTML = \"\";\r\n    const hasResults = this.filtered.length > 0;\r\n    this.emptyState.style.display = hasResults ? \"none\" : \"\";\r\n    this.results.style.display = hasResults ? \"grid\" : \"none\";\r\n    if (!hasResults) return;\r\n    this.filtered.forEach((cmd, idx) => {\r\n      const item = this.document.createElement(\"div\");\r\n      item.className = \"cp-item\";\r\n      item.setAttribute(\"role\", \"option\");\r\n      item.setAttribute(\"data-cmd-id\", cmd.id || String(idx));\r\n      const title = this.document.createElement(\"div\");\r\n      title.className = \"cp-title\";\r\n      title.innerHTML = this._highlight(cmd.title || \"\", query);\r\n      item.appendChild(title);\r\n      if (cmd.subtitle) {\r\n        const sub = this.document.createElement(\"div\");\r\n        sub.className = \"cp-sub\";\r\n        sub.innerHTML = this._highlight(cmd.subtitle, query);\r\n        item.appendChild(sub);\r\n      }\r\n      item.addEventListener(\"click\", (ev) => {\r\n        ev.stopPropagation();\r\n        this.selectedIndex = idx;\r\n        this._runCommand(cmd);\r\n      });\r\n      item.addEventListener(\"mousemove\", () => {\r\n        this._setSelectedIndex(idx);\r\n      });\r\n      if (idx === this.selectedIndex) {\r\n        item.setAttribute(\"aria-selected\", \"true\");\r\n        item.id = `cp-item-${idx}`;\r\n        this.results.setAttribute(\"aria-activedescendant\", item.id);\r\n      } else {\r\n        item.setAttribute(\"aria-selected\", \"false\");\r\n      }\r\n      this.results.appendChild(item);\r\n    });\r\n    this._ensureSelectionVisible();\r\n  }\r\n  private _highlight(text: string, query: string): string {\r\n    if (!query) return this._escapeHtml(text);\r\n    const q = query.trim().toLowerCase();\r\n    if (!q) return this._escapeHtml(text);\r\n    const lowerText = text.toLowerCase();\r\n    const pos = lowerText.indexOf(q);\r\n    if (pos !== -1) {\r\n      const before = this._escapeHtml(text.slice(0, pos));\r\n      const match = this._escapeHtml(text.slice(pos, pos + q.length));\r\n      const after = this._escapeHtml(text.slice(pos + q.length));\r\n      return `${before}<span class=\"cp-highlight\">${match}</span>${after}`;\r\n    }\r\n    // Fallback for fuzzy highlighting\r\n    let out = \"\";\r\n    let qi = 0;\r\n    for (const char of text) {\r\n      if (qi < q.length && char.toLowerCase() === q[qi]) {\r\n        out += `<span class=\"cp-highlight\">${this._escapeHtml(char)}</span>`;\r\n        qi++;\r\n      } else {\r\n        out += this._escapeHtml(char);\r\n      }\r\n    }\r\n    return out;\r\n  }\r\n  private _escapeHtml(s: string): string {\r\n    const map: Record<string, string> = {\r\n      \"&\": \"&amp;\",\r\n      \"<\": \"&lt;\",\r\n      \">\": \"&gt;\",\r\n      '\"': \"&quot;\",\r\n      \"'\": \"&#39;\",\r\n    };\r\n    return String(s).replace(/[&<>\"']/g, (c) => map[c]);\r\n  }\r\n  private _setSelectedIndex(i: number): void {\r\n    this.selectedIndex = Math.max(0, Math.min(i, this.filtered.length - 1));\r\n    Array.from(this.results.children).forEach((node, idx) => {\r\n      if (idx === this.selectedIndex) {\r\n        node.setAttribute(\"aria-selected\", \"true\");\r\n        node.id = `cp-item-${idx}`;\r\n        this.results.setAttribute(\"aria-activedescendant\", node.id);\r\n      } else {\r\n        node.setAttribute(\"aria-selected\", \"false\");\r\n        node.removeAttribute(\"id\");\r\n      }\r\n    });\r\n    this._ensureSelectionVisible();\r\n  }\r\n  private _moveSelection(delta: number): void {\r\n    if (this.filtered.length === 0) return;\r\n    const newIndex = (this.selectedIndex + delta + this.filtered.length) %\r\n      this.filtered.length;\r\n    this._setSelectedIndex(newIndex);\r\n  }\r\n  private _ensureSelectionVisible(): void {\r\n    const node = this.results.children[this.selectedIndex] as HTMLElement;\r\n    if (!node) return;\r\n    const containerTop = this.results.scrollTop;\r\n    const containerBottom = containerTop + this.results.clientHeight;\r\n    const nodeTop = node.offsetTop;\r\n    const nodeBottom = nodeTop + node.offsetHeight;\r\n    if (nodeTop < containerTop) {\r\n      this.results.scrollTop = nodeTop - 6;\r\n    } else if (nodeBottom > containerBottom) {\r\n      this.results.scrollTop = nodeBottom - this.results.clientHeight + 6;\r\n    }\r\n  }\r\n  private _clearActiveDescendant(): void {\r\n    this.results.removeAttribute(\"aria-activedescendant\");\r\n  }\r\n  private _runCommand(cmd: Palette.Command): void {\r\n    try {\r\n      if (typeof cmd.run === \"function\") {\r\n        this.hide();\r\n        const res = cmd.run(this.window);\r\n        if (res && typeof (res as Promise<void>).then === \"function\") {\r\n          (res as Promise<void>).catch((err: Error) =>\r\n            console.error(\"Command error:\", err)\r\n          );\r\n        }\r\n      } else {\r\n        console.warn(\"Command has no run() function\", cmd);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Command execution failed\", err);\r\n    }\r\n  }\r\n  public init(_win: Window): void {\r\n    if (this.options.populateOnInit === true) {\r\n      this.setCommands(this.populateFunc(this));\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": ";;;;AAwEO,MAAM,UAAN,MAAc;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAER,YACE,KACA,cACA,UAA2B,CAAC,GAC5B;AACA,WAAK,SAAS;AACd,UAAI,CAAC,IAAI,UAAU;AACjB,cAAM,IAAI,MAAM,sCAAsC;AAAA,MACxD;AACA,WAAK,WAAW,IAAI;AACpB,WAAK,SAAS,KAAK,SAAS,cAAc,QAAQ;AAClD,WAAK,QAAQ,KAAK,SAAS,cAAc,OAAO;AAChD,WAAK,UAAU,KAAK,SAAS,cAAc,KAAK;AAChD,WAAK,aAAa,KAAK,SAAS,cAAc,KAAK;AACnD,WAAK,WAAW,CAAC;AACjB,WAAK,WAAW,CAAC;AACjB,WAAK,gBAAgB;AACrB,WAAK,UAAU;AACf,WAAK,eAAe;AACpB,WAAK,UAAU;AAAA,QACb,aAAa;AAAA,QACb,YAAY;AAAA,QACZ,gBAAgB;AAAA,QAChB,OAAO;AAAA,QACP,gBAAgB;AAAA,QAChB,GAAG;AAAA,MACL;AACA,WAAK,SAAS;AACd,WAAK,YAAY;AAAA,IAEnB;AAAA,IACO,KAAK,KAAe,UAAU,IAAU;AAC7C,UAAI,CAAC,IAAI;AAAM;AACf,UAAI,CAAC,KAAK,SAAS;AACjB;AACA,aAAK,UAAU;AAAA,MACjB;AACA,WAAK,OAAO,UAAU;AACtB,WAAK,MAAM,QAAQ;AACnB,WAAK,eAAe;AACpB,WAAK,YAAY;AACjB,UAAI,KAAK,MAAM,WAAW;AAAA,IAC5B;AAAA,IACO,OAAa;AAClB,UAAI,KAAK,OAAO,MAAM;AACpB,aAAK,OAAO,MAAM;AAAA,MACpB;AACA,WAAK,SAAS,KAAK,MAAM,WAAW;AACpC,WAAK,uBAAuB;AAAA,IAC9B;AAAA,IACO,IAAI,KAA4B;AACrC,UAAI,CAAC,OAAO,CAAC,IAAI;AAAI,cAAM,IAAI,MAAM,yBAAyB;AAC9D,YAAM,mBAAmB,KAAK,SAAS;AAAA,QAAU,CAAC,QAChD,IAAI,OAAO,IAAI;AAAA,MACjB;AACA,UAAI,qBAAqB,IAAI;AAC3B,aAAK,SAAS,gBAAgB,IAAI;AAAA,MACpC,OAAO;AACL,aAAK,SAAS,KAAK,GAAG;AAAA,MACxB;AACA,WAAK,YAAY,KAAK,QAAQ;AAAA,IAChC;AAAA,IACO,YAAY,MAA+B;AAChD,WAAK,WAAW,MAAM,QAAQ,IAAI,IAAI,KAAK,MAAM,IAAI,CAAC;AACtD,WAAK,eAAe;AAAA,IACtB;AAAA,IACO,UAAgB;AACrB,WAAK,cAAc;AACnB,WAAK,QAAQ,OAAO;AAAA,IACtB;AAAA,IACQ,WAAiB;AACvB,WAAK,OAAO,YAAY;AACxB,WAAK,OAAO,aAAa,cAAc,MAAM;AAC7C,WAAK,OAAO,aAAa,QAAQ,QAAQ;AACzC,aAAO,OAAO,KAAK,OAAO,OAAO;AAAA,QAC/B,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,OAAO;AAAA,QACP,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,WAAW;AAAA,MACb,CAAC;AACD,YAAM,OAAO,KAAK,SAAS,cAAc,KAAK;AAC9C,WAAK,YAAY;AACjB,WAAK,aAAa,QAAQ,UAAU;AACpC,YAAM,aAAa,KAAK,SAAS,cAAc,KAAK;AACpD,iBAAW,YAAY;AACvB,WAAK,MAAM,OAAO;AAClB,WAAK,MAAM,cAAc,KAAK,QAAQ;AACtC,WAAK,MAAM,aAAa,cAAc,wBAAwB;AAC9D,WAAK,MAAM,eAAe;AAC1B,WAAK,MAAM,aAAa;AACxB,WAAK,MAAM,YAAY;AACvB,YAAM,OAAO,KAAK,SAAS,cAAc,KAAK;AAC9C,WAAK,YAAY;AACjB,WAAK,cAAc;AACnB,iBAAW,OAAO,KAAK,OAAO,IAAI;AAClC,WAAK,QAAQ,YAAY;AACzB,WAAK,QAAQ,aAAa,QAAQ,SAAS;AAC3C,WAAK,QAAQ,WAAW;AACxB,WAAK,QAAQ,MAAM,YAAY,GAAG,KAAK,QAAQ,aAAa,EAAE;AAC9D,WAAK,WAAW,YAAY;AAC5B,WAAK,WAAW,cAAc;AAC9B,WAAK,OAAO,YAAY,KAAK,SAAS,KAAK,UAAU;AACrD,WAAK,OAAO,YAAY,IAAI;AAC5B,WAAK,SAAS,KAAK,YAAY,KAAK,MAAM;AAC1C,YAAM,QAAQ,KAAK,SAAS,cAAc,OAAO;AACjD,YAAM,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BpB,WAAK,SAAS,KAAK,YAAY,KAAK;AAAA,IACtC;AAAA,IACQ,cAAoB;AAC1B,WAAK,MAAM,iBAAiB,SAAS,KAAK,QAAQ;AAClD,WAAK,OAAO,iBAAiB,SAAS,KAAK,cAAc;AACzD,WAAK,OAAO,iBAAiB,SAAS,KAAK,QAAQ;AACnD,WAAK,OAAO,iBAAiB,WAAW,KAAK,YAAY;AACzD,WAAK,OAAO,iBAAiB,oBAAoB,KAAK,YAAY;AAClE,WAAK,SAAS,iBAAiB,WAAW,KAAK,YAAY,IAAI;AAAA,IACjE;AAAA,IACQ,gBAAsB;AAC5B,WAAK,MAAM,oBAAoB,SAAS,KAAK,QAAQ;AACrD,WAAK,OAAO,oBAAoB,oBAAoB,KAAK,YAAY;AACrE,WAAK,OAAO,oBAAoB,SAAS,KAAK,cAAc;AAC5D,WAAK,OAAO,oBAAoB,SAAS,KAAK,QAAQ;AACtD,WAAK,OAAO,oBAAoB,WAAW,KAAK,YAAY;AAC5D,WAAK,SAAS,oBAAoB,WAAW,KAAK,YAAY,IAAI;AAAA,IACpE;AAAA,IACQ,eAAe,MAAY;AACjC,YAAM,WAAW,KAAK,aAAa,IAAI;AACvC,WAAK,YAAY,QAAQ;AAAA,IAC3B;AAAA,IACQ,WAAW,MAAY;AAC7B,WAAK,uBAAuB;AAC5B,WAAK,SAAS,KAAK,MAAM,WAAW;AAAA,IACtC;AAAA,IACQ,iBAAiB,CAAC,MAAwB;AAChD,UAAI,EAAE,WAAW,KAAK,QAAQ;AAC5B,UAAE,eAAe;AACjB,aAAK,KAAK;AAAA,MACZ;AAAA,IACF;AAAA,IACQ,WAAW,MAAY;AAC7B,WAAK,eAAe;AAAA,IACtB;AAAA,IACQ,cAAoB;AAC1B,UAAI;AACF,aAAK,MAAM,MAAM;AACjB,aAAK,MAAM,OAAO;AAAA,MACpB,SAAS,GAAG;AACV,gBAAQ,MAAM,CAAC;AAAA,MACjB;AAAA,IACF;AAAA,IACQ,aAAa,CAAC,MAA2B;AAC/C,UAAI,CAAC,KAAK,OAAO;AAAM;AACvB,cAAQ,EAAE,KAAK;AAAA,QACb,KAAK;AACH,YAAE,eAAe;AACjB,eAAK,KAAK;AACV;AAAA,QACF,KAAK;AACH,YAAE,eAAe;AACjB,eAAK,eAAe,EAAE;AACtB;AAAA,QACF,KAAK;AACH,YAAE,eAAe;AACjB,eAAK,eAAe,CAAC;AACrB;AAAA,QACF,KAAK;AACH,cAAI,EAAE,YAAY,KAAK,SAAS,kBAAkB,KAAK,OAAO;AAC5D,cAAE,eAAe;AACjB,iBAAK,eAAe,EAAE;AAAA,UACxB,WAAW,CAAC,EAAE,YAAY,KAAK,SAAS,kBAAkB,KAAK,OAAO;AACpE,cAAE,eAAe;AACjB,iBAAK,eAAe,CAAC;AAAA,UACvB;AACA;AAAA,QACF,KAAK;AACH,cAAI,KAAK,SAAS,SAAS,GAAG;AAC5B,cAAE,eAAe;AACjB,kBAAM,MAAM,KAAK,SAAS,KAAK,aAAa;AAC5C,gBAAI;AAAK,mBAAK,YAAY,GAAG;AAAA,UAC/B;AACA;AAAA,QACF,KAAK;AACH,cAAI,EAAE,QAAQ;AACZ,cAAE,eAAe;AACjB,iBAAK,eAAe,EAAE;AAAA,UACxB;AACA;AAAA,QACF,KAAK;AACH,cAAI,EAAE,QAAQ;AACZ,cAAE,eAAe;AACjB,iBAAK,eAAe,CAAC;AAAA,UACvB;AACA;AAAA,MACJ;AAAA,IACF;AAAA,IACQ,eAAe,CAAC,MAA2B;AACjD,UAAI,EAAE,QAAQ;AAAO;AACrB,YAAM,YAAY,KAAK,OAAO;AAAA,QAC5B;AAAA,MACF;AACA,UAAI,UAAU,WAAW;AAAG;AAC5B,YAAM,QAAQ,UAAU,CAAC;AACzB,YAAM,OAAO,UAAU,UAAU,SAAS,CAAC;AAC3C,UAAI,EAAE,YAAY,KAAK,SAAS,kBAAkB,OAAO;AACvD,UAAE,eAAe;AACjB,aAAK,MAAM;AAAA,MACb,WAAW,CAAC,EAAE,YAAY,KAAK,SAAS,kBAAkB,MAAM;AAC9D,UAAE,eAAe;AACjB,cAAM,MAAM;AAAA,MACd;AAAA,IACF;AAAA,IACQ,iBAAuB;AAC7B,YAAM,IAAI,KAAK,MAAM,MAAM,KAAK;AAChC,YAAM,UAAU,EAAE,UAAU,KAAK,QAAQ,iBACrC,KAAK,gBAAgB,CAAC,IACtB,KAAK,SAAS,MAAM;AACxB,WAAK,WAAW;AAChB,WAAK,gBAAgB,KAAK;AAAA,QACxB,KAAK;AAAA,QACL,KAAK,IAAI,GAAG,QAAQ,SAAS,CAAC;AAAA,MAChC;AACA,UAAI,KAAK,gBAAgB;AAAG,aAAK,gBAAgB;AACjD,WAAK,eAAe,CAAC;AAAA,IACvB;AAAA,IACQ,gBAAgB,GAA8B;AACpD,UAAI,MAAM;AAAI,eAAO,KAAK,SAAS,MAAM;AACzC,YAAM,QAAQ,EAAE,YAAY;AAC5B,YAAM,SAAS,KAAK,SACjB,IAAI,CAAC,QAAQ;AACZ,cAAM,SAAS,IAAI,SAAS,IAAI,YAAY;AAC5C,cAAM,YAAY,IAAI,YAAY,IAAI,YAAY;AAClD,YAAI,QAAQ;AACZ,YAAI,UAAU;AAAO,mBAAS;AAC9B,YAAI,MAAM,WAAW,KAAK;AAAG,mBAAS;AACtC,YAAI,MAAM,SAAS,KAAK;AAAG,mBAAS;AACpC,YAAI,SAAS,SAAS,KAAK;AAAG,mBAAS;AACvC,YAAI,KAAK,QAAQ,SAAS,KAAK,YAAY,OAAO,KAAK,GAAG;AACxD,mBAAS;AAAA,QACX;AACA,eAAO,EAAE,KAAK,MAAM;AAAA,MACtB,CAAC,EACA,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC5B,aAAO;AAAA,QACL,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,MAAM,cAAc,EAAE,IAAI,KAAK;AAAA,MACtE;AACA,aAAO,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG;AAAA,IAChC;AAAA,IACQ,YAAY,OAAe,MAAuB;AACxD,UAAI,MAAM,WAAW;AAAG,eAAO;AAC/B,UAAI,KAAK,GAAG,KAAK;AACjB,aAAO,KAAK,MAAM,UAAU,KAAK,KAAK,QAAQ;AAC5C,YAAI,MAAM,EAAE,MAAM,KAAK,EAAE,GAAG;AAC1B;AAAA,QACF;AACA;AAAA,MACF;AACA,aAAO,OAAO,MAAM;AAAA,IACtB;AAAA,IACQ,eAAe,OAAqB;AAC1C,WAAK,QAAQ,YAAY;AACzB,YAAM,aAAa,KAAK,SAAS,SAAS;AAC1C,WAAK,WAAW,MAAM,UAAU,aAAa,SAAS;AACtD,WAAK,QAAQ,MAAM,UAAU,aAAa,SAAS;AACnD,UAAI,CAAC;AAAY;AACjB,WAAK,SAAS,QAAQ,CAAC,KAAK,QAAQ;AAClC,cAAM,OAAO,KAAK,SAAS,cAAc,KAAK;AAC9C,aAAK,YAAY;AACjB,aAAK,aAAa,QAAQ,QAAQ;AAClC,aAAK,aAAa,eAAe,IAAI,MAAM,OAAO,GAAG,CAAC;AACtD,cAAM,QAAQ,KAAK,SAAS,cAAc,KAAK;AAC/C,cAAM,YAAY;AAClB,cAAM,YAAY,KAAK,WAAW,IAAI,SAAS,IAAI,KAAK;AACxD,aAAK,YAAY,KAAK;AACtB,YAAI,IAAI,UAAU;AAChB,gBAAM,MAAM,KAAK,SAAS,cAAc,KAAK;AAC7C,cAAI,YAAY;AAChB,cAAI,YAAY,KAAK,WAAW,IAAI,UAAU,KAAK;AACnD,eAAK,YAAY,GAAG;AAAA,QACtB;AACA,aAAK,iBAAiB,SAAS,CAAC,OAAO;AACrC,aAAG,gBAAgB;AACnB,eAAK,gBAAgB;AACrB,eAAK,YAAY,GAAG;AAAA,QACtB,CAAC;AACD,aAAK,iBAAiB,aAAa,MAAM;AACvC,eAAK,kBAAkB,GAAG;AAAA,QAC5B,CAAC;AACD,YAAI,QAAQ,KAAK,eAAe;AAC9B,eAAK,aAAa,iBAAiB,MAAM;AACzC,eAAK,KAAK,WAAW,GAAG;AACxB,eAAK,QAAQ,aAAa,yBAAyB,KAAK,EAAE;AAAA,QAC5D,OAAO;AACL,eAAK,aAAa,iBAAiB,OAAO;AAAA,QAC5C;AACA,aAAK,QAAQ,YAAY,IAAI;AAAA,MAC/B,CAAC;AACD,WAAK,wBAAwB;AAAA,IAC/B;AAAA,IACQ,WAAW,MAAc,OAAuB;AACtD,UAAI,CAAC;AAAO,eAAO,KAAK,YAAY,IAAI;AACxC,YAAM,IAAI,MAAM,KAAK,EAAE,YAAY;AACnC,UAAI,CAAC;AAAG,eAAO,KAAK,YAAY,IAAI;AACpC,YAAM,YAAY,KAAK,YAAY;AACnC,YAAM,MAAM,UAAU,QAAQ,CAAC;AAC/B,UAAI,QAAQ,IAAI;AACd,cAAM,SAAS,KAAK,YAAY,KAAK,MAAM,GAAG,GAAG,CAAC;AAClD,cAAM,QAAQ,KAAK,YAAY,KAAK,MAAM,KAAK,MAAM,EAAE,MAAM,CAAC;AAC9D,cAAM,QAAQ,KAAK,YAAY,KAAK,MAAM,MAAM,EAAE,MAAM,CAAC;AACzD,eAAO,GAAG,MAAM,8BAA8B,KAAK,UAAU,KAAK;AAAA,MACpE;AAEA,UAAI,MAAM;AACV,UAAI,KAAK;AACT,iBAAW,QAAQ,MAAM;AACvB,YAAI,KAAK,EAAE,UAAU,KAAK,YAAY,MAAM,EAAE,EAAE,GAAG;AACjD,iBAAO,8BAA8B,KAAK,YAAY,IAAI,CAAC;AAC3D;AAAA,QACF,OAAO;AACL,iBAAO,KAAK,YAAY,IAAI;AAAA,QAC9B;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA,IACQ,YAAY,GAAmB;AACrC,YAAM,MAA8B;AAAA,QAClC,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AACA,aAAO,OAAO,CAAC,EAAE,QAAQ,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC;AAAA,IACpD;AAAA,IACQ,kBAAkB,GAAiB;AACzC,WAAK,gBAAgB,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,SAAS,SAAS,CAAC,CAAC;AACtE,YAAM,KAAK,KAAK,QAAQ,QAAQ,EAAE,QAAQ,CAAC,MAAM,QAAQ;AACvD,YAAI,QAAQ,KAAK,eAAe;AAC9B,eAAK,aAAa,iBAAiB,MAAM;AACzC,eAAK,KAAK,WAAW,GAAG;AACxB,eAAK,QAAQ,aAAa,yBAAyB,KAAK,EAAE;AAAA,QAC5D,OAAO;AACL,eAAK,aAAa,iBAAiB,OAAO;AAC1C,eAAK,gBAAgB,IAAI;AAAA,QAC3B;AAAA,MACF,CAAC;AACD,WAAK,wBAAwB;AAAA,IAC/B;AAAA,IACQ,eAAe,OAAqB;AAC1C,UAAI,KAAK,SAAS,WAAW;AAAG;AAChC,YAAM,YAAY,KAAK,gBAAgB,QAAQ,KAAK,SAAS,UAC3D,KAAK,SAAS;AAChB,WAAK,kBAAkB,QAAQ;AAAA,IACjC;AAAA,IACQ,0BAAgC;AACtC,YAAM,OAAO,KAAK,QAAQ,SAAS,KAAK,aAAa;AACrD,UAAI,CAAC;AAAM;AACX,YAAM,eAAe,KAAK,QAAQ;AAClC,YAAM,kBAAkB,eAAe,KAAK,QAAQ;AACpD,YAAM,UAAU,KAAK;AACrB,YAAM,aAAa,UAAU,KAAK;AAClC,UAAI,UAAU,cAAc;AAC1B,aAAK,QAAQ,YAAY,UAAU;AAAA,MACrC,WAAW,aAAa,iBAAiB;AACvC,aAAK,QAAQ,YAAY,aAAa,KAAK,QAAQ,eAAe;AAAA,MACpE;AAAA,IACF;AAAA,IACQ,yBAA+B;AACrC,WAAK,QAAQ,gBAAgB,uBAAuB;AAAA,IACtD;AAAA,IACQ,YAAY,KAA4B;AAC9C,UAAI;AACF,YAAI,OAAO,IAAI,QAAQ,YAAY;AACjC,eAAK,KAAK;AACV,gBAAM,MAAM,IAAI,IAAI,KAAK,MAAM;AAC/B,cAAI,OAAO,OAAQ,IAAsB,SAAS,YAAY;AAC5D,YAAC,IAAsB;AAAA,cAAM,CAAC,QAC5B,QAAQ,MAAM,kBAAkB,GAAG;AAAA,YACrC;AAAA,UACF;AAAA,QACF,OAAO;AACL,kBAAQ,KAAK,iCAAiC,GAAG;AAAA,QACnD;AAAA,MACF,SAAS,KAAK;AACZ,gBAAQ,MAAM,4BAA4B,GAAG;AAAA,MAC/C;AAAA,IACF;AAAA,IACO,KAAK,MAAoB;AAC9B,UAAI,KAAK,QAAQ,mBAAmB,MAAM;AACxC,aAAK,YAAY,KAAK,aAAa,IAAI,CAAC;AAAA,MAC1C;AAAA,IACF;AAAA,EACF;",
  "names": []
}
